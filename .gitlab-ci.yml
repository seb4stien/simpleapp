stages:
  - deploy
  - test
  - clean

deploy_aws:
  image: registry.gitlab.si.francetelecom.fr/build-images/kubernetes
  stage: deploy
  script:
    - echo todo

before_script:
  - test -z "$GCP_CLUSTER_IP" -o -z "$GCP_CLUSTER_PASSWORD" && echo "You must define GCP_CLUSTER_IP and GCP_CLUSTER_PASSWORD" && exit 1
  - kubectl config set-cluster dojo-gcp --server https://$GCP_CLUSTER_IP --insecure-skip-tls-verify
  - kubectl config set-credentials admin --username admin --password $GCP_CLUSTER_PASSWORD
  - kubectl config set-context dev-gcp --cluster dojo-gcp --user admin
  - kubectl config use-context dev-gcp

deploy_gcp:
  image: registry.gitlab.si.francetelecom.fr/build-images/kubernetes
  stage: deploy
  script:
    - helm template platform/helm/ --name $CI_COMMIT_REF_NAME > release.yaml
    - kubectl apply -f release.yaml
  environment:
    name: staging-gcp-$CI_COMMIT_REF_NAME
    on_stop: stop_gcp
  artifacts:
    paths:
      - release.yaml

stop_gcp:
  stage: clean
  image: registry.gitlab.si.francetelecom.fr/build-images/kubernetes
  environment:
    name: staging-gcp-$CI_COMMIT_REF_NAME
    action: stop
  script:
    - kubectl delete -f release.yaml
  when: manual

test_gcp:
  image: registry.gitlab.si.francetelecom.fr/build-images/kubernetes
  script:
    - echo "Waiting LB"
    - while kubectl get svc/${CI_COMMIT_REF_NAME}-simpleapp-front | grep pending;do sleep 10; echo "... sleeping 10s"; done
    - sleep 2
    - SVC_IP=$(kubectl get svc/${CI_COMMIT_REF_NAME}-simpleapp-front | tail -n 1 | awk '{print $4}')
    - curl $SVC_IP | grep "timestamp = 1"
